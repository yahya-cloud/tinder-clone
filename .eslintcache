[{"C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\index.js":"1","C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\reportWebVitals.js":"2","C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\App.js":"3","C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\Header\\Header.js":"4","C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\Header\\TinderLogo\\TinderLogo.js":"5","C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\TinderCards\\TinderCards.js":"6","C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\firebase.js":"7","C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\SwipeButtons\\SwipeButtons.js":"8","C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\ChatPage\\ChatPage.js":"9","C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\ChatPage\\Chat\\Chat.js":"10","C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\ChatScreen\\ChatScreen.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":871,"mtime":1610437303368,"results":"15","hashOfConfig":"13"},{"size":1134,"mtime":1610430163715,"results":"16","hashOfConfig":"13"},{"size":1131,"mtime":1610429923896,"results":"17","hashOfConfig":"13"},{"size":1317,"mtime":1610379595832,"results":"18","hashOfConfig":"13"},{"size":609,"mtime":1610371144635,"results":"19","hashOfConfig":"13"},{"size":1394,"mtime":1610426795058,"results":"20","hashOfConfig":"13"},{"size":793,"mtime":1610432272495,"results":"21","hashOfConfig":"13"},{"size":698,"mtime":1610442353303,"results":"22","hashOfConfig":"13"},{"size":2223,"mtime":1610442118892,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"9lju41",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\index.js",[],["50","51"],"C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\App.js",[],"C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\Header\\Header.js",[],"C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\Header\\TinderLogo\\TinderLogo.js",[],"C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\TinderCards\\TinderCards.js",[],"C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\firebase.js",[],"C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\SwipeButtons\\SwipeButtons.js",[],"C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\ChatPage\\ChatPage.js",["52"],"import React, {useEffect, useState} from 'react';\r\n\r\nimport Chat from './Chat/Chat';\r\nimport database from '../../firebase';\r\nimport { Person } from '@material-ui/icons';\r\n\r\n\r\nconst ChatPage = (props) => {\r\n\r\n    const [people, setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n        database\r\n        .collection('people')\r\n        .onSnapshot((snapshot) =>\r\n        setPeople( snapshot.docs.map(doc => doc.data())))\r\n    }, [])\r\n    \r\n\r\n    return(\r\n        <div>\r\n        {people.map(person => (\r\n            <Chat \r\n             name= {person.name}\r\n             message= {person.message}\r\n             timestamp= {person.timestamp}\r\n             photo= {person.url}\r\n             key={person.name}   \r\n            />\r\n        ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage;","C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\ChatPage\\Chat\\Chat.js",[],["53","54"],"C:\\Users\\Yahya\\desktop\\tinder-clone\\src\\components\\ChatScreen\\ChatScreen.js",["55"],"import classes from './ChatScreen.module.css';\r\nimport React, { useState } from 'react'\r\nimport { Avatar } from '@material-ui/core';\r\nimport { SettingsInputAntenna } from '@material-ui/icons';\r\n\r\nconst ChatScreen = () => {\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n    const [messages, setMessages] = useState([\r\n        {\r\n            name: 'Halsey',\r\n            url: 'https://i.pinimg.com/474x/43/1f/6d/431f6dda81b4d9e6fbf2d83bed95f58f.jpg',\r\n            message:'Hey',\r\n        },\r\n        {\r\n            name: 'Halsey',\r\n            url: 'https://i.pinimg.com/474x/43/1f/6d/431f6dda81b4d9e6fbf2d83bed95f58f.jpg',\r\n            message:'how about a coffee date?',\r\n        },\r\n        {\r\n            message: 'umm... sorry i am very busy these days' \r\n        }\r\n\r\n    ])\r\n\r\n    const handleSend = (event) => {\r\n        event.preventDefault();\r\n        if(input !== ''){\r\n            const newText = {\r\n                message: input\r\n            } \r\n            const newMessages = [...messages, newText];\r\n            setMessages(newMessages);\r\n            setInput('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <p className={classes.infoText}>You matched with Halsey on 11/01/21 </p>\r\n           <div className={classes.messageContainer}>\r\n           {messages.map(msg => \r\n            msg.name ? \r\n            (\r\n                <div className={classes.message}>\r\n                <Avatar src={msg.url} alt={msg.name} />\r\n                <p>{msg.message}</p>\r\n                </div>\r\n            ) :\r\n            (\r\n                <div className={classes.UserMessage }>\r\n                <p>{msg.message}</p>\r\n                </div>\r\n            )\r\n            \r\n            )}\r\n           </div>\r\n        \r\n        <div>\r\n           <form className={classes.inputContainer}>\r\n               <input \r\n               className={classes.input}\r\n               placeholder=\"Text a message\"\r\n               value={input}\r\n               onChange= {(event) => setInput(event.target.value) }\r\n            />\r\n               <button onClick={handleSend} className={classes.inputButton} >SEND</button>\r\n           </form> \r\n        </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatScreen;",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":5,"column":10,"nodeType":"62","messageId":"63","endLine":5,"endColumn":16},{"ruleId":"56","replacedBy":"64"},{"ruleId":"58","replacedBy":"65"},{"ruleId":"60","severity":1,"message":"66","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":30},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'Person' is defined but never used.","Identifier","unusedVar",["67"],["68"],"'SettingsInputAntenna' is defined but never used.","no-global-assign","no-unsafe-negation"]